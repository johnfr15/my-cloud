version: "3.5"
services:

  # INFRASTRUCTURE
  gateway:
    image: nginx
    container_name: john-gateway
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./infrastructure/gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - john-city
    depends_on:
      - auth
      - sample-ai
  


  # API



  # APP
  sample-ai:
    build: 
      context: apps/sample-ai
      args:
       - SERVICE_BASE_PATH=/app/sample-ai
    container_name: john-sample-ai
    restart: always
    env_file:                            
      - apps/sample-ai/client/.env.production # NEED TO BE SETUP
      - apps/sample-ai/server/.env # NEED TO BE SETUP
    ports:
      - 8101:80
    networks:
      - john-city



  # AUTH
  auth:
    build: 
      context: auths/auth
      args: 
        - SERVICE_BASE_PATH=/auth
    container_name: john-auth
    restart: always
    environment:
      - SERVICE_BASE_PATH=/auth
    env_file:                            
     - auths/auth/server/.env # NEED TO BE SETUP
     - auths/auth/client/.env # NEED TO BE SETUP
    ports:
      - 8100:80
    networks:
      - john-city
    depends_on:
      - mongodb



  # DATABASE
  mongodb:
    image: "mongo:latest"
    container_name: john-mongodb
    restart: always
    env_file:
      - db/.env # NEED TO BE SETUP
    volumes:
      - dbdata:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - john-city



networks:
  john-city:
    external: true



volumes:
  dbdata:
    name: john-dbdata
    external: true